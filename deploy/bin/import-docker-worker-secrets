#!/bin/bash -e

# This script reads docker-worker store in passwordstore and writes
# up deploy.json.
#
# Use: deploy/bin/import-docker-worker-secrets
#
# Notice you must have taskcluster passwordstore cloned and configured.
# See ssh://gitolite3@git-internal.mozilla.org/taskcluster/secrets.git
# for details.

base_dir=/tmp

read -s -p "Enter your gpg passphrase, or enter for none (e.g., Yubikey): " passphrase
if [ -n "$passphrase" ]; then
    export PASSWORD_STORE_GPG_OPTS="--passphrase=$passphrase"
else
    echo
    echo '(no passphrase set)'
fi

echo 'decrypting..'
pass show docker-worker/shared-env-var-key > $base_dir/docker-worker.key
chmod 0600 $base_dir/docker-worker.key

pass show tls/star.taskcluster-worker.net | awk '
  BEGIN {
    should_print = 0
  }
  $0 ~ "BEGIN CERTIFICATE" {
    should_print = 1
  }
  $0 ~ "END CERTIFICATE" {
    if (should_print) {
      should_print = 0
      print $0
    }
  }
  {
    if (should_print) {
      print $0
    }
  }
' > $base_dir/docker-worker.crt
# Intermediate certificate
cat <<EOF >> $base_dir/docker-worker.crt
-----BEGIN CERTIFICATE-----
MIIElDCCA3ygAwIBAgIQAf2j627KdciIQ4tyS8+8kTANBgkqhkiG9w0BAQsFADBh
MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBD
QTAeFw0xMzAzMDgxMjAwMDBaFw0yMzAzMDgxMjAwMDBaME0xCzAJBgNVBAYTAlVT
MRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxJzAlBgNVBAMTHkRpZ2lDZXJ0IFNIQTIg
U2VjdXJlIFNlcnZlciBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
ANyuWJBNwcQwFZA1W248ghX1LFy949v/cUP6ZCWA1O4Yok3wZtAKc24RmDYXZK83
nf36QYSvx6+M/hpzTc8zl5CilodTgyu5pnVILR1WN3vaMTIa16yrBvSqXUu3R0bd
KpPDkC55gIDvEwRqFDu1m5K+wgdlTvza/P96rtxcflUxDOg5B6TXvi/TC2rSsd9f
/ld0Uzs1gN2ujkSYs58O09rg1/RrKatEp0tYhG2SS4HD2nOLEpdIkARFdRrdNzGX
kujNVA075ME/OV4uuPNcfhCOhkEAjUVmR7ChZc6gqikJTvOX6+guqw9ypzAO+sf0
/RR3w6RbKFfCs/mC/bdFWJsCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8C
AQAwDgYDVR0PAQH/BAQDAgGGMDQGCCsGAQUFBwEBBCgwJjAkBggrBgEFBQcwAYYY
aHR0cDovL29jc3AuZGlnaWNlcnQuY29tMHsGA1UdHwR0MHIwN6A1oDOGMWh0dHA6
Ly9jcmwzLmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEdsb2JhbFJvb3RDQS5jcmwwN6A1
oDOGMWh0dHA6Ly9jcmw0LmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEdsb2JhbFJvb3RD
QS5jcmwwPQYDVR0gBDYwNDAyBgRVHSAAMCowKAYIKwYBBQUHAgEWHGh0dHBzOi8v
d3d3LmRpZ2ljZXJ0LmNvbS9DUFMwHQYDVR0OBBYEFA+AYRyCMWHVLyjnjUY4tCzh
xtniMB8GA1UdIwQYMBaAFAPeUDVW0Uy7ZvCj4hsbw5eyPdFVMA0GCSqGSIb3DQEB
CwUAA4IBAQAjPt9L0jFCpbZ+QlwaRMxp0Wi0XUvgBCFsS+JtzLHgl4+mUwnNqipl
5TlPHoOlblyYoiQm5vuh7ZPHLgLGTUq/sELfeNqzqPlt/yGFUzZgTHbO7Djc1lGA
8MXW5dRNJ2Srm8c+cftIl7gzbckTB+6WohsYFfZcTEDts8Ls/3HB40f/1LkAtDdC
2iDJ6m6K7hQGrn2iWZiIqBtvLfTyyRRfJs8sjX7tN8Cp1Tm5gr8ZDOo0rwAhaPit
c+LJMto4JQtV05od8GiG7S5BNO98pVAdvzr508EIDObtHopYJeS4d60tbvVS3bR0
j6tJLp07kzQoH3jOlOrHvdPJbRzeXDLz
-----END CERTIFICATE-----
EOF
chmod 0600 $base_dir/docker-worker.crt

pass show tls/star.taskcluster-worker.net | awk '
  BEGIN {
    should_print = 0
  }
  $0 ~ "BEGIN RSA PRIVATE KEY" {
    should_print = 1
  }
  $0 ~ "END RSA PRIVATE KEY" {
    if (should_print) {
      should_print = 0
      print $0
    }
  }
  {
    if (should_print) {
      print $0
    }
  }
' > $base_dir/docker-worker-cert.key
chmod 0600 $base_dir/docker-worker-cert.key

pass show docker-worker/cot-signing-key > $base_dir/docker-worker-cot-signing.key
chmod 0600 $base_dir/docker-worker-cot-signing.key
pass show docker-worker/cot-ed25519-signing-key > $base_dir/docker-worker-cot-ed25519-signing.key
chmod 0600 $base_dir/docker-worker-cot-ed25519-signing.key

echo '
{
  "debug.level": "",
  "privateKeyLocation": "'$base_dir/docker-worker.key'",
  "sslCertificateLocation": "'$base_dir/docker-worker.crt'",
  "sslKeyLocation": "'$base_dir/docker-worker-cert.key'",
  "cotSigningKey": "'$base_dir/docker-worker-cot-signing.key'",
  "cotEd25519SigningKey": "'$base_dir/docker-worker-cot-ed25519-signing.key'",
  "papertrail": "logs2.papertrailapp.com:22395"
}
' > deploy/deploy.json

cat deploy/deploy.json
