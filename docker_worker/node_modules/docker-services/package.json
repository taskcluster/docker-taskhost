{
  "name": "docker-services",
  "version": "0.2.1",
  "description": "docker-services",
  "main": "group_containers.js",
  "scripts": {
    "test": "make test"
  },
  "bin": {
    "docker-services": "./bin/docker-services"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/taskcluster/docker-services.git"
  },
  "author": "",
  "license": "BSD-2-Clause",
  "bugs": {
    "url": "https://github.com/taskcluster/docker-services/issues"
  },
  "dependencies": {
    "dockerode-promise": "0.0.1",
    "dockerode-options": "0.1.0",
    "promise": "~3.2.0",
    "uuid": "~1.4.1",
    "debug": "~0.7.4",
    "superagent": "~0.16.0",
    "dependency-groups": "~0.1.0",
    "helmsman": "~0.2.6",
    "optimist": "~0.6.0"
  },
  "devDependencies": {
    "mocha": "~1.17.0",
    "mocha-as-promised": "~2.0.0",
    "uuid": "~1.4.1"
  },
  "readme": "# docker-services\n\nDocker orchestration library (written in node) for testing\ndocker images. Images can depend on other images, etc...\n\n### Examples\n\nSee [/examples](/examples) for the full list of fully functional (and\ntested) examples.\n\nLets say you have a node application which has a worker and uses both\nuse amqp.\n\n`docker_services.json`:\n\n```json\n{\n  \"app\": {\n    \"links\": [\"worker:worker\", \"amqp:amqp\"],\n    \"image\": \"my-repo/my-app\"\n  },\n\n  \"worker\": {\n    \"links\": [\"amqp:amqp\"],\n    \"image\": \"my-repo/worker\"\n  },\n\n  \"amqp\": {\n    \"image\": \"some-lib/amqp\"\n  }\n}\n\n```\n\nThen you could run a test on in the app like this:\n\n```sh\ndocker-services exec app npm test\n```\n\n### Known issue\n\n  - docker must be on the host (meaning you must be on linux). This will be fixed soon.\n\n### Roadmap\n\n  - Remove the need for docker to run on the host\n  - Aggregate log output for exec (so we can see other services while running exec)\n  - Formal support for `up` and `down` for deamonized services (you won't need to leave exec running)\n  - Building of docker images\n\n### Developing\n\nYou need [vagrant](http://www.vagrantup.com/).\n\n### Running the tests\n\n```sh\nvagrant up\nvagrant ssh\ncd /vagrant\nmake test\n```\n\n### Publishing a new version\n\nThe 'associate' is a docker image that also needs to be published\nfor each version (right now this is tied to my docker account).\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/taskcluster/docker-services",
  "_id": "docker-services@0.2.1",
  "dist": {
    "shasum": "bb3100f53ccc8ec59f73798a395d796bc6221123"
  },
  "_from": "docker-services@~0.2.1",
  "_resolved": "https://registry.npmjs.org/docker-services/-/docker-services-0.2.1.tgz"
}
